<resources>
    <string name="app_name">Battery 100% Discharger</string>
    <string name="toast_not_rooted">Device Not Rooted</string>
    <string name="toast_b8">Success Supply Controller Reset. Now reboot device</string>
    <string name="toast_08">Success Registers Reset. Now reboot device</string>
    <string name="toast_reboot">Success Rebooting</string>
    <string name="toast_error">Error</string>
    
    <string name="about_dialog_title">Instructions</string>
    <string name="about_dialog_message">
<![CDATA[ 
 This application can fix the 100% battery stuck problem  for <b>Ainol Aurora 2 , Elf 2</b> devices   
    <p>
	&#8226;<font color="blue">your tablet must be rooted</font><br>
	&#8226;let your battery nearly completely discharge (for example watch some 
		movie or play games to run out the battery), 
		it may help to more accurate the battery percentage<br>
	&#8226;press <b>Reset Supply Controller</b> button.<br>
	&#8226;at this time you can reboot your tablet and the battery will run down to 5&#37; <br>
	&#8226;then you can try to full charge your tablet to see the problem is fixed or not.<br>
	&#8226;ONLY  if the problem still exist, activate and press 
	<b>Reset Driver Registers </b> button.
  <h3>Supply Controller Reset </h3> 
    The following commands will be executed:
  <p>
  <i>echo B8 > /sys/devices/i2c-2/2-0034/axp20_reg </i><br>
  <i>echo B820 > /sys/devices/i2c-2/2-0034/axp20_reg</i><br>
  <p>  
  	The <b>echo B820</b> command writes <i>20</i> into register <i>B8</i>, 
  	which resets the Coulomb counters to 0. 
	The former (20) also disables the Coulomb counters. <br>
	The driver will automatically re-enable them on the next boot.

  <h3>Driver Registers Reset </h3> 
  <b><font color="red">ONLY do the following steps if you still got battery 
  	stuck after controller reset</font></b><br>
  The following commands will be executed:
  <p>
  <i>echo 08 > /sys/devices/i2c-2/2-0034/axp20_reg </i><br>
  <i>echo 0800 > /sys/devices/i2c-2/2-0034/axp20_reg</i>
  <p>
  The <b>0800</b> command writes <i>00</i> into register <i>08</i>, which is used by the driver. 
	You can use any hexadecimal value from 00 (zero) to 64 (hundred) to set the battery level to that value. 
This won\'t work with newer drivers/firmwares, however.   
  ]]>
    </string>
    
    <string name="b8_dialog_title">Reset Supply Controller</string>
    <string name="b8_dialog_message"> <![CDATA[
	   The following commands will be executed:
	  <p>
	  <i>echo B8 > /sys/devices/i2c-2/2-0034/axp20_reg </i><br>
	  <i>echo B820 > /sys/devices/i2c-2/2-0034/axp20_reg</i><br>
	  <p>  
	  Do you want to continue?       
        ]]>
    </string>
    <string name="_08_dialog_title">Reset Driver Registers</string>
    <string name="_08_dialog_message"><![CDATA[
      The following commands will be executed:
	  <p>
	  <i>echo 08 > /sys/devices/i2c-2/2-0034/axp20_reg </i><br>
	  <i>echo 0800 > /sys/devices/i2c-2/2-0034/axp20_reg</i><br>
	  <p>  
	  Do you want to continue?       
        ]]>
    </string>
    <string name="reboot_dialog_title">Reboot Device</string>
    <string name="reboot_dialog_message"><![CDATA[
        Do you want to continue?         
        ]]>
    </string>
    <string name="check_box_text">Controller Reset doesn\'t help</string>
    <string name="btn_instructions_text">Instructions</string>
    <string name="btn_b8_text">Reset Supply Controller</string>
    <string name="btn_08_text">Reset Driver Registers</string>
    <string name="btn_reboot_text">Reboot</string>
    <string name="btn_close">Close</string>

</resources>